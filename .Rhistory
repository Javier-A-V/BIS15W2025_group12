knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("janitor")
library("naniar")
nematodes <- read.table("C:/Users/jv_23/Downloads/dataset2.txt", header = TRUE, sep = "", stringsAsFactors = FALSE, fill = TRUE)
View(nematodes)
dir.create("Data")
file.rename("C:/Users/jv_23/Downloads/dataset2.txt", "Data/dataset2.txt")
Nematodes <- read.csv("data/dataset2.txt", header = TRUE, stringsAsFactors = FALSE)
View(Nematodes)
nematodes <- read.csv("data/dataset2.txt", header = TRUE, sep = "", stringsAsFactors = FALSE, fill = TRUE)
nematodes <- read.csv("data/dataset2.txt", header = TRUE, sep = "", stringsAsFactors = FALSE, fill = TRUE)
View(nematodes)
library("tidyverse")
library("janitor")
library("naniar")
View(nematodes)
names(nematodes)
treonis <- read.csv("data/Treonis.csv")
View(treonis)
library("tidyverse")
library("janitor")
library("naniar")
View(nematodes)
treonis <- read.csv("data/Treonis.csv")
write.csv("data/treonis.csv")
View(treonis)
library("tidyverse")
library("janitor")
library("naniar")
library("readxl")
treonis %>%
pivot_wider(names_from = Experiment,
values_from = Soil_Moisture_.g.100g.)
treonis %>%
pivot_wider(names_from = Experiment,
values_from = Soil_Moisture_.g.100g.)
treonis %>%
ggplot(aes(x = Soil_Moisture_.g.100g., y = Nematodes.kg))+
geom_point()
treonis %>%
ggplot(aes(x = Soil_Moisture_.g.100g., y = Nematodes.kg))+
geom_point()+
scale_x_log10()
treonis %>%
ggplot(aes(x = Soil_Moisture_.g.100g., y = Nematodes.kg))+
geom_point()+
scale_y_log10()
treonis <- read.csv("data/Treonis.csv") %>% clean_names()
treonis <- treonis %>%
mutate(panagrolaimus_identified = panagrolaimus)
treonis_1 <- treonis %>%
replace_with(~str_replace(.x, "_identified", ""))
treonis_1 <- treonis %>%
rename_with(~str_replace(.x, "_identified", ""))
View(treonis_1)
treonis_1 <- treonis %>%  #cleaning up the column names
rename_with(~str_replace(.x, "_identified", "")) %>%
rename_with(date = date_collected)
names(treonis)
names(treonis_1)
treonis_2 <- treonis_1 %>%
pivot_longer(cols = 14:27,
names_to = "species",
values_to = "count"
?cols
treonis_2 <- treonis_1 %>%
pivot_longer(cols = 14:27,
names_to = "species",
values_to = "count")
View(treonis_2)
View(treonis)
treonis_2 <- treonis_2 %>%
replace_with_na_all(condition = ~.x == 9999)
treonis_2 <- treonis_2 %>%
replace_with_na_all(condition = ~.x == 9999) %>%
miss_var_summary()
treonis_2 <- treonis_2 %>%
replace_with_na_all(condition = ~.x == 9999)
miss_var_summary()
treonis_2 <- treonis_2 %>%
replace_with_na_all(condition = ~.x == 9999)
miss_var_summary()
miss_var_summary(treonis_2)
treonis_2 <- treonis_1 %>%
pivot_longer(cols = 14:27,
names_to = "species",
values_to = "count")
treonis_2 <- treonis_2 %>%
replace_with_na_all(condition = ~.x == 9999)
treonis_2 <- treonis_2 %>%
replace_with_na_all(condition = ~.x == "nd")
miss_var_summary(treonis_2)
treonis_2 %>%
select(sample_id, p_h) %>%
group_by(sample_id)
treonis_2 %>%
count(species)
treonis_2 %>%
count(species, na.rm = T)
treonis_2 %>%
filter(count!="NA") %>%
count(species)
treonis_2 %>%
count(species)
treonis_2 %>%
group_by(species) %>%
ggplot(aes(x = species, y = count))+
geom_bar()
treonis_2 %>%
group_by(species) %>%
ggplot(aes(species))+
geom_bar()
str(treonis_2)
class(treonis_2$count)
as.numeric(treonis_2$count)
treonis_2 %>%
group_by(experiment, species) %>%
summarize(total_count = sum(count), .groups = 'keep')
treonis_2 %>%
pivot_wider(names_from = "species",
values_from = "count")
treonis_2 <- treonis_2 %>%
pivot_wider(names_from = "species",
values_from = "count")
treonis_2 %>%
group_by(experiment, sample_id)
treonis_2 %>%
select(p_h) %>%
group_by(experiment, sample_id)
treonis_2 %>%
select(p_h, experiment, sample_id) %>%
group_by(experiment, sample_id)
write.csv(treonis_2, "data/treonis_2.csv", row.names = FALSE)
soil <- read_excel("Soil_nematodes_all_data_final_Dryad.xlsx") %>% clean_names()
library("tidyverse")
library("janitor")
library("naniar")
library("readxl")
soil <- read_excel("Soil_nematodes_all_data_final_Dryad.xlsx") %>% clean_names()
View(soil)
soil <- soil %>%
replace_with_na_all(condition = ~.x == NaN)
soil <- soil %>%
replace_with_na_all(condition = ~.x == "NaN")
library("tidyverse")
library("janitor")
library("naniar")
library("readxl")
library(shiny)
library(shinydashboard)
library(shinythemes)
library(fastmap)
library(leaflet)
library(mapdata)
nematodes <- read.csv("data/dataset2.txt", header = TRUE, sep = "", stringsAsFactors = FALSE, fill = TRUE)
#this way cleans up the data nicely, can clean it up further and combine more data
names(nematodes)
treonis <- read.csv("data/Treonis.csv") %>% clean_names()
treonis <- read.csv("data/Treonis.csv") %>% clean_names()
soil <- read_excel("Soil_nematodes_all_data_final_Dryad.xlsx") %>% clean_names()
soil <- soil %>%
replace_with_na_all(condition = ~.x == "NaN")
names(soil)
soil %>%
ggplot(aes(x=p_h, y=elevation))+
geom_point()+
geom_smooth(method = lm, se=F)
summary(soil)
View(soil)
miss_var_summary(soil)
summary(soil)
View(nematodes)
View(soil)
soil <- soil %>%
replace_with_na_all(condition = ~.x == "NaN") %>%
mutate(across(ends_with(percent_of_herbivores),~ round(.,1)))
soil <- soil %>%
replace_with_na_all(condition = ~.x == "NaN") %>%
mutate(ends_with(percent_of_herbivores),~ round(.,1))
soil <- soil %>%
replace_with_na_all(condition = ~.x == "NaN") %>%
mutate(across(ends_with("percent_of_herbivores"), ~ round(., 1)))
soil <- soil %>%
replace_with_na_all(condition = ~.x == "NaN") %>%
mutate(across(ends_with("herbivores"), ~ round(., 1)))
soil <- soil %>%
replace_with_na_all(condition = ~.x == "NaN") %>%
mutate(across(ends_with("herbivores"), ~ round(suppressWarnings(as.numeric(.)), 1)))
View(soil)
library("tidyverse")
library("janitor")
library("naniar")
library("readxl")
library(shiny)
library(shinydashboard)
library(shinythemes)
library(fastmap)
library(leaflet)
library(mapdata)
library("tidyverse")
library("janitor")
library("naniar")
library("readxl")
library(shiny)
library(shinydashboard)
library(shinythemes)
library(fastmap)
library(leaflet)
library(mapdata)
nematodes <- read.csv("data/dataset2.txt", header = TRUE, sep = "", stringsAsFactors = FALSE, fill = TRUE)
#this way cleans up the data nicely, can clean it up further and combine more data
soil <- soil %>%
replace_with_na_all(condition = ~.x == "NaN") %>%
mutate(across(ends_with("herbivores"), ~ round(suppressWarnings(as.numeric(.)), 1)))
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Dashboard"),
dashboardSidebar(
sidebarMenu( #adding to this sidebar menu would be useful for other plots
menuItem("Map", tabName = "map", icon = icon("map")),
menuItem("pH Plot", tabName = "ph_plot", icon = icon("chart-line")),
menuItem("Moisture Plot", tabName = "moisture_plot", icon = icon("chart-bar"))
),
# Inputs common across tabs
selectInput("nematode", "Select Trophic Guild(s):",
choices = unique(nematode$trophic_guild),
selected = unique(nematode$trophic_guild)[1],
multiple = TRUE),
sliderInput("pH_range", "Select pH Range:",
min = min(nematode$p_h, na.rm = TRUE),
max = max(nematode$p_h, na.rm = TRUE),
value = c(min(nematode$p_h, na.rm = TRUE), max(nematode$p_h, na.rm = TRUE))),
sliderInput("moisture_range", "Select Moisture Range:",
min = min(nematode$moisture, na.rm = TRUE),
max = max(nematode$moisture, na.rm = TRUE),
value = c(min(nematode$moisture, na.rm = TRUE), max(nematode$moisture, na.rm = TRUE))),
sliderInput("elevation_range", "Select Elevation Range:",
min = min(nematode$elevation, na.rm = TRUE),
max = max(nematode$elevation, na.rm = TRUE),
value = c(min(nematode$elevation, na.rm = TRUE), max(nematode$elevation, na.rm = TRUE)))
),
dashboardBody( #can include more tabs if needed here
tabItems(
tabItem(tabName = "map",
leafletOutput("nematode_map", height = 600)
),
tabItem(tabName = "ph_plot",
plotOutput("pH_plot", height = 500)
),
tabItem(tabName = "moisture_plot",
plotOutput("moisture_plot", height = 500)
)
)
)
)
View(nematodes)
View(soil)
names(soil)
soil <- soil %>%
replace_with_na_all(condition = ~.x == "NaN") %>%
mutate(across(ends_with("herbivores"), ~ round(suppressWarnings(as.numeric(.)), 1)))
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Dashboard"),
dashboardSidebar(
sidebarMenu( #adding to this sidebar menu would be useful for other plots
menuItem("Map", tabName = "map", icon = icon("map")),
menuItem("pH Plot", tabName = "ph_plot", icon = icon("chart-line")),
menuItem("Moisture Plot", tabName = "moisture_plot", icon = icon("chart-bar"))
),
# Inputs common across tabs
selectInput("nematode", "Select Trophic Guild(s):",
choices = unique(nematode$trophic_guild),
selected = unique(nematode$trophic_guild)[1],
multiple = TRUE),
sliderInput("pH_range", "Select pH Range:",
min = min(nematode$p_h, na.rm = TRUE),
max = max(nematode$p_h, na.rm = TRUE),
value = c(min(nematode$p_h, na.rm = TRUE), max(nematode$p_h, na.rm = TRUE))),
sliderInput("moisture_range", "Select Moisture Range:",
min = min(nematode$moisture, na.rm = TRUE),
max = max(nematode$moisture, na.rm = TRUE),
value = c(min(nematode$moisture, na.rm = TRUE), max(nematode$moisture, na.rm = TRUE))),
sliderInput("elevation_range", "Select Elevation Range:",
min = min(nematode$elevation, na.rm = TRUE),
max = max(nematode$elevation, na.rm = TRUE),
value = c(min(nematode$elevation, na.rm = TRUE), max(nematode$elevation, na.rm = TRUE)))
),
dashboardBody( #can include more tabs if needed here
tabItems(
tabItem(tabName = "map",
leafletOutput("nematode_map", height = 600)
),
tabItem(tabName = "ph_plot",
plotOutput("pH_plot", height = 500)
),
tabItem(tabName = "moisture_plot",
plotOutput("moisture_plot", height = 500)
)
)
)
)
library("tidyverse")
library("janitor")
library("naniar")
library("readxl")
library(shiny)
library(shinydashboard)
library(shinythemes)
library(fastmap)
library(leaflet)
library(mapdata)
nematodes <- read.csv("data/dataset2.txt", header = TRUE, sep = "", stringsAsFactors = FALSE, fill = TRUE)
#this way cleans up the data nicely, can clean it up further and combine more data
soil <- read_excel("Soil_nematodes_all_data_final_Dryad.xlsx") %>% clean_names()
soil %>%
ggplot(aes(x=p_h, y=elevation))+
geom_point()+
geom_smooth(method = lm, se=F)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Dashboard"),
dashboardSidebar(
sidebarMenu( #adding to this sidebar menu would be useful for other plots
menuItem("Map", tabName = "map", icon = icon("map")),
menuItem("pH Plot", tabName = "ph_plot", icon = icon("chart-line")),
menuItem("Moisture Plot", tabName = "moisture_plot", icon = icon("chart-bar"))
),
# Inputs common across tabs
selectInput("nematode", "Select Trophic Guild(s):",
choices = unique(nematode$trophic_guild),
selected = unique(nematode$trophic_guild)[1],
multiple = TRUE),
sliderInput("pH_range", "Select pH Range:",
min = min(nematode$p_h, na.rm = TRUE),
max = max(nematode$p_h, na.rm = TRUE),
value = c(min(nematode$p_h, na.rm = TRUE), max(nematode$p_h, na.rm = TRUE))),
sliderInput("moisture_range", "Select Moisture Range:",
min = min(nematode$moisture, na.rm = TRUE),
max = max(nematode$moisture, na.rm = TRUE),
value = c(min(nematode$moisture, na.rm = TRUE), max(nematode$moisture, na.rm = TRUE))),
sliderInput("elevation_range", "Select Elevation Range:",
min = min(nematode$elevation, na.rm = TRUE),
max = max(nematode$elevation, na.rm = TRUE),
value = c(min(nematode$elevation, na.rm = TRUE), max(nematode$elevation, na.rm = TRUE)))
),
dashboardBody( #can include more tabs if needed here
tabItems(
tabItem(tabName = "map",
leafletOutput("nematode_map", height = 600)
),
tabItem(tabName = "ph_plot",
plotOutput("pH_plot", height = 500)
),
tabItem(tabName = "moisture_plot",
plotOutput("moisture_plot", height = 500)
)
)
)
)
