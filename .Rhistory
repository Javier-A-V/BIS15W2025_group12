tabItem(tabName = "add_graph",
fluidRow(
box(plotOutput("plot4", height = 250)),
selectInput("y",
"Select Y Variable",
choices = c("enrichment_footprint", "composite_footprint", "sigma_maturity_index"),
selected = "enrichment_footprint"),
)),
tabItem(tabName = "species",
fluidRow(
box(plotOutput("plot5", height=500, width = 400)),
selectInput("x",
"Select X Variable",
choices = c("conductivity", "p_h", "moisture", "temperature","isothermality"),
selected = "conductivity"),
selectInput("y",
"Select Y Variable",
choices = c("herbivores_percent_of_total",
"fungivores_percent_of_total",
"bacterivores_percent_of_total",
"predators_percent_of_total",
"omnivores_percent_of_total"),
selected = "herbivores_percent_of_total"),
))
# this is where the output will go
)))
server <- function(input, output) {
output$plot4 <- renderPlot({
ggplot(data=soil,
aes_string(x="elevation_level", y=input$y, color="transect"))+
geom_boxplot(na.rm=T)+
theme_light(base_size=14)})
output$plot5 <- renderPlot({
ggplot(data = soil,
aes_string(x=input$x, y=input$y, color="transect"))+
geom_point(na.rm=T)+
theme_light(base_size = 14)+
geom_smooth(se=T, color="black")
})
}
shinyApp(ui, server)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Soil Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Elevation and Diversity",
tabName = "add_graph",
icon = icon("th")),
menuItem("Elevation level and Species",
tabName = "species",
icon = icon("th"))
)
),
dashboardBody(tabItems(
tabItem(tabName = "add_graph",
fluidRow(
box(plotOutput("plot4", height = 250)),
selectInput("y",
"Select Y Variable",
choices = c("enrichment_footprint", "composite_footprint", "sigma_maturity_index"),
selected = "enrichment_footprint"),
)),
tabItem(tabName = "species",
fluidRow(
box(plotOutput("plot5", height=500, width = 400)),
selectInput("x",
"Select X Variable",
choices = c("conductivity", "p_h", "moisture", "temperature","isothermality"),
selected = "conductivity"),
selectInput("y",
"Select Y Variable",
choices = c("herbivores_percent_of_total",
"fungivores_percent_of_total",
"bacterivores_percent_of_total",
"predators_percent_of_total",
"omnivores_percent_of_total"),
selected = "herbivores_percent_of_total"),
))
# this is where the output will go
)))
server <- function(input, output) {
output$plot4 <- renderPlot({
ggplot(data=soil,
aes_string(x="elevation_level", y=input$y, color="transect"))+
geom_boxplot(na.rm=T)+
theme_light(base_size=14)})
output$plot5 <- renderPlot({
ggplot(data = soil,
aes_string(x=input$x, y=input$y, color="transect"))+
geom_point(na.rm=T)+
theme_light(base_size = 14)+
geom_smooth(se=T, color="black")
})
}
shinyApp(ui, server)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Soil Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Elevation and Diversity",
tabName = "add_graph",
icon = icon("th")),
menuItem("Elevation level and Species",
tabName = "species",
icon = icon("th"))
)
),
dashboardBody(tabItems(
tabItem(tabName = "add_graph",
fluidRow(
box(plotOutput("plot4", height = 250)),
selectInput("y",
"Select Y Variable",
choices = c("enrichment_footprint", "composite_footprint", "sigma_maturity_index"),
selected = "enrichment_footprint"),
)),
tabItem(tabName = "species",
fluidRow(
box(plotOutput("plot5", height=500, width = 400)),
selectInput("x",
"Select X Variable",
choices = c("conductivity", "p_h", "moisture", "temperature","isothermality"),
selected = "conductivity"),
selectInput("y",
"Select Y Variable",
choices = c("herbivores_percent_of_total",
"fungivores_percent_of_total",
"bacterivores_percent_of_total",
"predators_percent_of_total",
"omnivores_percent_of_total"),
selected = "herbivores_percent_of_total"),
))
# this is where the output will go
)))
server <- function(input, output) {
output$plot4 <- renderPlot({
ggplot(data=soil,
aes_string(x="elevation_level", y=input$y, color="transect"))+
geom_boxplot(na.rm=T)+
theme_light(base_size=14)})
output$plot5 <- renderPlot({
ggplot(data = soil,
aes_string(x=input$x, y=input$y, color="transect"))+
geom_point(na.rm=T)+
theme_light(base_size = 14)+
geom_smooth(method=lm, se=T, color="black")
})
}
shinyApp(ui, server)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Soil Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Elevation and Diversity",
tabName = "add_graph",
icon = icon("th")),
menuItem("Elevation level and Species",
tabName = "species",
icon = icon("th"))
)
),
dashboardBody(tabItems(
tabItem(tabName = "add_graph",
fluidRow(
box(plotOutput("plot4", height = 250)),
selectInput("y",
"Select Y Variable",
choices = c("enrichment_footprint", "composite_footprint", "sigma_maturity_index"),
selected = "enrichment_footprint"),
)),
tabItem(tabName = "species",
fluidRow(
box(plotOutput("plot5", height=400, width = 400)),
selectInput("x",
"Select X Variable",
choices = c("conductivity", "p_h", "moisture", "temperature","isothermality"),
selected = "conductivity"),
selectInput("y",
"Select Y Variable",
choices = c("herbivores_percent_of_total",
"fungivores_percent_of_total",
"bacterivores_percent_of_total",
"predators_percent_of_total",
"omnivores_percent_of_total"),
selected = "herbivores_percent_of_total"),
))
# this is where the output will go
)))
server <- function(input, output) {
output$plot4 <- renderPlot({
ggplot(data=soil,
aes_string(x="elevation_level", y=input$y, color="transect"))+
geom_boxplot(na.rm=T)+
theme_light(base_size=14)})
output$plot5 <- renderPlot({
ggplot(data = soil,
aes_string(x=input$x, y=input$y, color="transect"))+
geom_point(na.rm=T)+
theme_light(base_size = 14)+
geom_smooth(method=lm, se=T, color="black")
})
}
shinyApp(ui, server)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Soil Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Elevation and Diversity",
tabName = "add_graph",
icon = icon("th")),
menuItem("Elevation level and Species",
tabName = "species",
icon = icon("th"))
)
),
dashboardBody(tabItems(
tabItem(tabName = "add_graph",
fluidRow(
box(plotOutput("plot4", height = 250)),
selectInput("y",
"Select Y Variable",
choices = c("enrichment_footprint", "composite_footprint", "sigma_maturity_index"),
selected = "enrichment_footprint"),
)),
tabItem(tabName = "species",
fluidRow(
box(plotOutput("plot5", height=400, width = 400)),
selectInput("x",
"Select X Variable",
choices = c("conductivity", "p_h", "moisture", "temperature","isothermality", "elevation_level"),
selected = "conductivity"),
selectInput("y",
"Select Y Variable",
choices = c("herbivores_percent_of_total",
"fungivores_percent_of_total",
"bacterivores_percent_of_total",
"predators_percent_of_total",
"omnivores_percent_of_total"),
selected = "herbivores_percent_of_total"),
))
# this is where the output will go
)))
server <- function(input, output) {
output$plot4 <- renderPlot({
ggplot(data=soil,
aes_string(x="elevation_level", y=input$y, color="transect"))+
geom_boxplot(na.rm=T)+
theme_light(base_size=14)})
output$plot5 <- renderPlot({
ggplot(data = soil,
aes_string(x=input$x, y=input$y, color="transect"))+
geom_point(na.rm=T)+
theme_light(base_size = 14)+
geom_smooth(method=lm, se=T, color="black")
})
}
shinyApp(ui, server)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Soil Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Soil and Climate",
tabName = "dashboard",
icon = icon("dashboard")),
menuItem("Elevation and Soil Moisture",
tabName = "widgets",
icon = icon("th")),
menuItem("Elevation and Diversity",
tabName = "tables",
icon = icon("th")),
menuItem("Elevation level and Species",
tabName = "species",
icon = icon("th"))
)
),
## Body content
dashboardBody(
tabItems(
## First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)),
selectInput("x",
"Select X Variable",
choices = c("conductivity", "p_h", "moisture", "temperature"),
selected = "conductivity"),
selectInput("y",
"Select Y Variable",
choices = c("temperature_annual_range", "precipitation_of_wettest_month", "precipitation_seasonality", "precipitation_of_driest_month"),
selected = "temperature_annual_range")
)
),
## Second tab item
tabItem(tabName = "widgets",
fluidRow(
box(plotOutput("plot2", height = 250)),
selectInput("elevation", "Select elevation:",
choices=unique(soil$elevation_level)),
)
),
## Third tab item
tabItem(tabName = "tables",
fluidRow(
box(plotOutput("plot3", height = 250)),
selectInput("y",
"Select Y Variable",
choices = c("enrichment_footprint", "composite_footprint", "sigma_maturity_index"),
selected = "enrichment_footprint"),
)
),
tabItem(tabName = "species",
fluidRow(
box(plotOutput("plot4", height=400, width = 400)),
selectInput("x",
"Select X Variable",
choices = c("conductivity", "p_h", "moisture", "temperature","isothermality"),
selected = "conductivity"),
selectInput("y",
"Select Y Variable",
choices = c("herbivores_percent_of_total",
"fungivores_percent_of_total",
"bacterivores_percent_of_total",
"predators_percent_of_total",
"omnivores_percent_of_total"),
selected = "herbivores_percent_of_total"),
))
)
)
)
server <- function(input, output, session) {
output$plot1 <- renderPlot({
ggplot(data=soil,
aes_string(x=input$x, y=input$y, color="transect"))+
geom_point(na.rm=T)+
theme_light(base_size=14)+
geom_smooth(method="lm", se=F)
})
output$plot2 <- renderPlot({
soil %>%
filter(elevation_level==input$elevation) %>%
ggplot(aes(x=moisture)) +
geom_density(color="black", fill="steelblue", alpha=0.6)
})
output$plot3 <- renderPlot({
ggplot(data=soil,
aes_string(x="elevation_level", y=input$y, color="transect"))+
geom_boxplot(na.rm=T)+
theme_light(base_size=14)
})
output$plot4<-renderPlot({
ggplot(data = soil,
aes_string(x=input$x, y=input$y, color="transect"))+
geom_point(na.rm=T)+
theme_light(base_size = 14)+
geom_smooth(method=lm, se=T, color="black")
})
}
shinyApp(ui, server)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Soil Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Soil and Climate",
tabName = "dashboard",
icon = icon("dashboard")),
menuItem("Elevation and Soil Moisture",
tabName = "widgets",
icon = icon("th")),
menuItem("Elevation and Diversity",
tabName = "tables",
icon = icon("th")),
menuItem("Elevation level and Species",
tabName = "species",
icon = icon("th"))
)
),
## Body content
dashboardBody(
tabItems(
## First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)),
selectInput("x",
"Select X Variable",
choices = c("conductivity", "p_h", "moisture", "temperature"),
selected = "conductivity"),
selectInput("y",
"Select Y Variable",
choices = c("temperature_annual_range", "precipitation_of_wettest_month", "precipitation_seasonality", "precipitation_of_driest_month"),
selected = "temperature_annual_range")
)
),
## Second tab item
tabItem(tabName = "widgets",
fluidRow(
box(plotOutput("plot2", height = 250)),
selectInput("elevation", "Select elevation:",
choices=unique(soil$elevation_level)),
)
),
## Third tab item
tabItem(tabName = "tables",
fluidRow(
box(plotOutput("plot3", height = 250)),
selectInput("y",
"Select Y Variable",
choices = c("enrichment_footprint", "composite_footprint", "sigma_maturity_index"),
selected = "enrichment_footprint"),
)
),
tabItem(tabName = "species",
fluidRow(
box(plotOutput("plot4", height=400, width = 400)),
selectInput("x",
"Select X Variable",
choices = c("conductivity", "p_h", "moisture", "temperature","isothermality"),
selected = "conductivity"),
selectInput("y",
"Select Y Variable",
choices = c("herbivores_percent_of_total",
"fungivores_percent_of_total",
"bacterivores_percent_of_total",
"predators_percent_of_total",
"omnivores_percent_of_total"),
selected = "herbivores_percent_of_total"),
))
)
)
)
server <- function(input, output, session) {
output$plot1 <- renderPlot({
ggplot(data=soil,
aes_string(x=input$x, y=input$y, color="transect"))+
geom_point(na.rm=T)+
theme_light(base_size=14)+
geom_smooth(method="lm", se=F)
})
output$plot2 <- renderPlot({
soil %>%
filter(elevation_level==input$elevation) %>%
ggplot(aes(x=moisture)) +
geom_density(color="black", fill="steelblue", alpha=0.6)
})
output$plot3 <- renderPlot({
ggplot(data=soil,
aes_string(x="elevation_level", y=input$y, color="transect"))+
geom_boxplot(na.rm=T)+
theme_light(base_size=14)
})
output$plot4<-renderPlot({
ggplot(data = soil,
aes_string(x=input$x, y=input$y, color="transect"))+
geom_point(na.rm=T)+
theme_light(base_size = 14)+
geom_smooth(method=lm, se=T, color="black")
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Nematode Dashboard"),
dashboardSidebar(
sidebarMenu( #adding to this sidebar menu would be useful for other plots
menuItem("Map", tabName = "map", icon = icon("map")),
menuItem("pH Plot", tabName = "ph_plot", icon = icon("chart-line")),
menuItem("Moisture Plot", tabName = "moisture_plot", icon = icon("chart-bar"))
),
# Inputs common across tabs
selectInput("nematode", "Select Trophic Guild(s):",
choices = unique(nematode$trophic_guild),
selected = unique(nematode$trophic_guild)[1],
multiple = TRUE),
sliderInput("pH_range", "Select pH Range:",
min = min(nematode$p_h, na.rm = TRUE),
max = max(nematode$p_h, na.rm = TRUE),
value = c(min(nematode$p_h, na.rm = TRUE), max(nematode$p_h, na.rm = TRUE))),
sliderInput("moisture_range", "Select Moisture Range:",
min = min(nematode$moisture, na.rm = TRUE),
max = max(nematode$moisture, na.rm = TRUE),
value = c(min(nematode$moisture, na.rm = TRUE), max(nematode$moisture, na.rm = TRUE))),
sliderInput("elevation_range", "Select Elevation Range:",
min = min(nematode$elevation, na.rm = TRUE),
max = max(nematode$elevation, na.rm = TRUE),
value = c(min(nematode$elevation, na.rm = TRUE), max(nematode$elevation, na.rm = TRUE)))
),
dashboardBody( #can include more tabs if needed here
tabItems(
tabItem(tabName = "map",
leafletOutput("nematode_map", height = 600)
),
tabItem(tabName = "ph_plot",
plotOutput("pH_plot", height = 500)
),
tabItem(tabName = "moisture_plot",
plotOutput("moisture_plot", height = 500)
)
)
)
)
